.PHONY: all clean
all: test
	
test: dynamic
ifeq ($(CC),cl)
	$(SET_ENV) && for %%x in (*.c) do $(CC) $(CFLAGS) \
		$(INCLUDE) $(LIBS) /I..$(SEP)$(INCLUDE_DIR) %%x \
		..$(SEP)$(DIST_DIR)$(SEP)$(DYNAMIC_LIB:.dll=.lib)
	copy ..$(SEP)$(DIST_DIR)$(SEP)$(DYNAMIC_LIB) . \
		&& for %%x in ($(TEST_OBJS:.obj=.exe)) do .$(SEP)%%x \
		&& if %%errorlevel%% neq 0 exit /b %%errorlevel%%
else
	for %%x in ($(TEST_OBJS:.o=)) do $(CC) $(CFLAGS) -o %%x.exe %%x.c \
		-I..$(SEP)$(INCLUDE_DIR) $(INCLUDE) \
		-L..$(SEP)$(DIST_DIR) -llist $(LIBS)
	copy ..$(SEP)$(DIST_DIR)$(SEP)$(DYNAMIC_LIB) . \
		&& for %%x in ($(TEST_OBJS:.o=.exe)) do .$(SEP)%%x \
		&& if %%errorlevel%% neq 0 exit /b %%errorlevel%%
endif

dynamic: ..$(SEP)$(DIST_DIR)$(SEP)$(DYNAMIC_LIB)

..$(SEP)$(DIST_DIR)$(SEP)$(DYNAMIC_LIB):
	$(MAKE) -C ..$(SEP)$(SOURCE_DIR) -f Makefile.win dynamic

testStatic: $(TEST_OBJS:.obj=.exe)
ifeq ($(CC),cl)
	for %%x in ($(TEST_OBJS:.obj=.exe)) do .$(SEP)%%x \
	&& if %%errorlevel%% neq 0 exit /b %%errorlevel%%
else
	for %%x in ($(TEST_OBJS:.o=.exe)) do .$(SEP)%%x \
	&& if %%errorlevel%% neq 0 exit /b %%errorlevel%%
endif

$(TEST_OBJS:.obj=.exe): static
ifeq ($(CC),cl)
	$(SET_ENV) && for %%x in ($(TEST_OBJS:.obj=.c)) do \
		$(CC) $(CFLAGS) $(INCLUDE) $(LIBS) /I..$(SEP)$(INCLUDE_DIR) %%x \
		..$(SEP)$(DIST_DIR)$(SEP)$(STATIC_LIB)
else
	for %%x in ($(TEST_OBJS:.o=)) do \
		$(CC) $(CFLAGS) -o %%x.exe %%x.c ..$(SEP)$(DIST_DIR)$(SEP)$(STATIC_LIB) \
		-I..$(SEP)$(INCLUDE_DIR) $(INCLUDE)
endif

static: ..$(SEP)$(DIST_DIR)$(SEP)$(STATIC_LIB)

..$(SEP)$(DIST_DIR)$(SEP)$(STATIC_LIB):
	$(MAKE) -C ..$(SEP)$(SOURCE_DIR) -f Makefile.win static

clean:
	$(RM) $(TEST_OBJS) $(TEST_OBJS:.obj=.exe) $(TEST_OBJS:.o=.exe) $(DYNAMIC_LIB)
